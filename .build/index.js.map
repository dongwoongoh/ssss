{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["class Room {\n  constructor(private id: string) { }\n\n  public set RoomId(id: string) {\n    this.id = id\n  }\n}\n\nclass RoomRepository {\n  private rooms: Map<string, Room> = new Map<string, Room>()\n\n  public save(room: Room): void {\n    this.rooms.set(room.RoomId, room)\n    console.log(this.rooms.get(room.RoomId))\n  }\n\n  public find(roomId: string): Room | undefined {\n    return this.rooms.get(roomId)\n  }\n}\n\nclass RoomService {\n  constructor(private readonly roomRepository: RoomRepository) { }\n\n  public create(roomId: string) {\n    const room = new Room(roomId)\n    this.roomRepository.save(room)\n  }\n\n  public find(roomId: string) {\n    const room = this.roomRepository.find(roomId)\n    if (!room) throw new Error('404')\n    return room\n  }\n}\n\nconst roomService = new RoomService(new RoomRepository())\nroomService.create('mad-broadcast!')"],
  "mappings": "AAAA,WAAW;AAAA,EACT,YAAoB,IAAY;AAAZ;AAAA;AAAA,MAET,OAAO,IAAY;AAC5B,SAAK,KAAK;AAAA;AAAA;AAId,qBAAqB;AAAA,EACX,QAA2B,IAAI;AAAA,EAEhC,KAAK,MAAkB;AAC5B,SAAK,MAAM,IAAI,KAAK,QAAQ;AAC5B,YAAQ,IAAI,KAAK,MAAM,IAAI,KAAK;AAAA;AAAA,EAG3B,KAAK,QAAkC;AAC5C,WAAO,KAAK,MAAM,IAAI;AAAA;AAAA;AAI1B,kBAAkB;AAAA,EAChB,YAA6B,gBAAgC;AAAhC;AAAA;AAAA,EAEtB,OAAO,QAAgB;AAC5B,UAAM,OAAO,IAAI,KAAK;AACtB,SAAK,eAAe,KAAK;AAAA;AAAA,EAGpB,KAAK,QAAgB;AAC1B,UAAM,OAAO,KAAK,eAAe,KAAK;AACtC,QAAI,CAAC;AAAM,YAAM,IAAI,MAAM;AAC3B,WAAO;AAAA;AAAA;AAIX,MAAM,cAAc,IAAI,YAAY,IAAI;AACxC,YAAY,OAAO;",
  "names": []
}
